Конкатинация - объеденение строк
/n /' /" - экранирующие символы (перенос на новую строку, ковычка как просто текст)
const - для безопасности ( по умолчанию)
let - если переменная будет  меняться
click keydowns => events
onclick onkeydown => event listener



10ex - оптимизировать код
сделать так что только 1 кнопка может быть активна

1. Сделать клаькулятор
2. Сделать дневник заметок

Каждый запуск цикла - инетрация

obj arr = links

Узнать как консольложить один раз, а не на каждый элемент массива. при проверке условий

Асинхронный код - не будет ждать пока закончиться строка с кодом перед ним, а сразу придет к выполнению некст кода
Синхронный код - ждет выполнение 1 и потом только запускает 2

ФУНКЦИЯ ВНУТРИИ ФУНКЦИИ = СТРЕЛОЧНУЮ ИСПОЛЬЗУЕМ
.forEach((value,index ) => {})
.map((value, index) => {})
.filter((value, index) => {})


includes() Метод includes() определяет, содержит ли массив определённый элемент, возвращая в зависимости от этого true или false .

Синтаксис
Конструкция switch имеет один или более блок case и необязательный блок default.

Выглядит она так:

switch(x) {
  case 'value1':  // if (x === 'value1')
    ...
    [break]

  case 'value2':  // if (x === 'value2')
    ...
    [break]

  default:
    ...
    [break]
}
Переменная x проверяется на строгое равенство первому значению value1, затем второму value2 и так далее.
Если соответствие установлено – switch начинает выполняться от соответствующей директивы case и далее, до ближайшего break (или до конца switch).
Если ни один case не совпал – выполняется (если есть) вариант default.